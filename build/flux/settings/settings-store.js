define(['exports', 'module', './settings-actions'], function (exports, module, _settingsActions) {'use strict';function _classCallCheck(instance, Constructor) {if (!(instance instanceof Constructor)) {throw new TypeError('Cannot call a class as a function');}}var 









  SettingsStore = 

  function SettingsStore(dispatcher, settings) {var _this = this;_classCallCheck(this, SettingsStore);
    this.dispatcher = dispatcher;
    this.settings = settings;

    dispatcher.register(_settingsActions.ViewportMoved, function (act) {
      var viewport = _this.settings.viewport.
      set('left', act.left).
      set('top', act.top);
      _this.settings = _this.settings.set('viewport', viewport);});


    dispatcher.register(_settingsActions.MinimapResized, function (_ref) {var width = _ref.width;var height = _ref.height;
      var minimap = _this.settings.minimap.
      set('width', width);
      _this.settings = _this.settings.set('minimap', minimap);});


    dispatcher.register(_settingsActions.ViewportMeasured, function (_ref2) {var width = _ref2.width;var height = _ref2.height;var by = _ref2.by;
      var viewport = _this.settings.viewport.
      set('width', width).
      set('height', height).
      set('movedBy', by);
      _this.settings = _this.settings.set('viewport', viewport);});


    dispatcher.register(_settingsActions.ChangeMode, function (act) {
      _this.settings = _this.settings.set('mode', act.mode);});


    dispatcher.register(_settingsActions.HandleFocusReceived, function (act) {
      _this.settings = _this.settings.set('hasFocus', true);});


    dispatcher.register(_settingsActions.HandleFocusLost, function (act) {
      _this.settings = _this.settings.set('hasFocus', false);});};module.exports = 






  SettingsStore;});
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uLy4uLy4uL3NyYy9mbHV4L3NldHRpbmdzL3NldHRpbmdzLXN0b3JlLmpzeCJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiOzs7Ozs7Ozs7O0FBVU0sZUFBYTs7QUFFTixXQUZQLGFBQWEsQ0FFSixVQUFVLEVBQUUsUUFBUSxFQUFHLHdDQUZoQyxhQUFhO0FBR2YsUUFBSSxDQUFDLFVBQVUsR0FBRyxVQUFVLENBQUM7QUFDN0IsUUFBSSxDQUFDLFFBQVEsR0FBRyxRQUFRLENBQUM7O0FBRXpCLGNBQVUsQ0FBQyxRQUFRLGtCQWZyQixhQUFhLEVBZXlCLFVBQUEsR0FBRyxFQUFJO0FBQ3pDLFVBQU0sUUFBUSxHQUFHLE1BQUssUUFBUSxDQUFDLFFBQVE7QUFDcEMsU0FBRyxDQUFFLE1BQU0sRUFBRSxHQUFHLENBQUMsSUFBSSxDQUFFO0FBQ3ZCLFNBQUcsQ0FBRSxLQUFLLEVBQUUsR0FBRyxDQUFDLEdBQUcsQ0FBRSxDQUFDO0FBQ3pCLFlBQUssUUFBUSxHQUFHLE1BQUssUUFBUSxDQUFDLEdBQUcsQ0FBRSxVQUFVLEVBQUUsUUFBUSxDQUFFLENBQUMsQ0FDM0QsQ0FBRSxDQUFDOzs7QUFFSixjQUFVLENBQUMsUUFBUSxrQkFwQnJCLGNBQWMsRUFvQnlCLFVBQUMsSUFBaUIsRUFBSyxLQUFwQixLQUFLLEdBQVAsSUFBaUIsQ0FBZixLQUFLLEtBQUUsTUFBTSxHQUFmLElBQWlCLENBQVIsTUFBTTtBQUNuRCxVQUFNLE9BQU8sR0FBRyxNQUFLLFFBQVEsQ0FBQyxPQUFPO0FBQ2xDLFNBQUcsQ0FBRSxPQUFPLEVBQUUsS0FBSyxDQUFFLENBQUM7QUFDekIsWUFBSyxRQUFRLEdBQUcsTUFBSyxRQUFRLENBQUMsR0FBRyxDQUFFLFNBQVMsRUFBRSxPQUFPLENBQUUsQ0FBQyxDQUN6RCxDQUFFLENBQUM7OztBQUVKLGNBQVUsQ0FBQyxRQUFRLGtCQTNCckIsZ0JBQWdCLEVBMkJ5QixVQUFDLEtBQXFCLEVBQUssS0FBeEIsS0FBSyxHQUFQLEtBQXFCLENBQW5CLEtBQUssS0FBRSxNQUFNLEdBQWYsS0FBcUIsQ0FBWixNQUFNLEtBQUUsRUFBRSxHQUFuQixLQUFxQixDQUFKLEVBQUU7QUFDekQsVUFBTSxRQUFRLEdBQUcsTUFBSyxRQUFRLENBQUMsUUFBUTtBQUNwQyxTQUFHLENBQUUsT0FBTyxFQUFFLEtBQUssQ0FBRTtBQUNyQixTQUFHLENBQUUsUUFBUSxFQUFFLE1BQU0sQ0FBRTtBQUN2QixTQUFHLENBQUUsU0FBUyxFQUFFLEVBQUUsQ0FBRSxDQUFDO0FBQ3hCLFlBQUssUUFBUSxHQUFHLE1BQUssUUFBUSxDQUFDLEdBQUcsQ0FBRSxVQUFVLEVBQUUsUUFBUSxDQUFFLENBQUMsQ0FDM0QsQ0FBRSxDQUFDOzs7QUFFSixjQUFVLENBQUMsUUFBUSxrQkFqQ3JCLFVBQVUsRUFpQ3lCLFVBQUEsR0FBRyxFQUFJO0FBQ3RDLFlBQUssUUFBUSxHQUFHLE1BQUssUUFBUSxDQUFDLEdBQUcsQ0FBRSxNQUFNLEVBQUUsR0FBRyxDQUFDLElBQUksQ0FBRSxDQUFDLENBQ3ZELENBQUUsQ0FBQzs7O0FBRUosY0FBVSxDQUFDLFFBQVEsa0JBbkNyQixtQkFBbUIsRUFtQ3lCLFVBQUEsR0FBRyxFQUFJO0FBQy9DLFlBQUssUUFBUSxHQUFHLE1BQUssUUFBUSxDQUFDLEdBQUcsQ0FBRSxVQUFVLEVBQUUsSUFBSSxDQUFFLENBQUMsQ0FDdkQsQ0FBRSxDQUFDOzs7QUFFSixjQUFVLENBQUMsUUFBUSxrQkF4Q3JCLGVBQWUsRUF3Q3lCLFVBQUEsR0FBRyxFQUFJO0FBQzNDLFlBQUssUUFBUSxHQUFHLE1BQUssUUFBUSxDQUFDLEdBQUcsQ0FBRSxVQUFVLEVBQUUsS0FBSyxDQUFFLENBQUMsQ0FDeEQsQ0FBRSxDQUFDLENBRUw7Ozs7Ozs7QUFJWSxlQUFhIiwiZmlsZSI6InNldHRpbmdzLXN0b3JlLmpzIiwic291cmNlUm9vdCI6InNyYyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7XG4gIFZpZXdwb3J0TW92ZWQsXG4gIFZpZXdwb3J0TWVhc3VyZWQsXG4gIE1pbmltYXBSZXNpemVkLFxuICBDaGFuZ2VNb2RlLFxuICBIYW5kbGVGb2N1c0xvc3QsXG4gIEhhbmRsZUZvY3VzUmVjZWl2ZWRcbn0gZnJvbSAnLi9zZXR0aW5ncy1hY3Rpb25zJztcblxuXG5jbGFzcyBTZXR0aW5nc1N0b3JlIHtcblxuICBjb25zdHJ1Y3RvciggZGlzcGF0Y2hlciwgc2V0dGluZ3MgKSB7XG4gICAgdGhpcy5kaXNwYXRjaGVyID0gZGlzcGF0Y2hlcjtcbiAgICB0aGlzLnNldHRpbmdzID0gc2V0dGluZ3M7XG5cbiAgICBkaXNwYXRjaGVyLnJlZ2lzdGVyKCBWaWV3cG9ydE1vdmVkLCBhY3QgPT4ge1xuICAgICAgY29uc3Qgdmlld3BvcnQgPSB0aGlzLnNldHRpbmdzLnZpZXdwb3J0XG4gICAgICAgIC5zZXQoICdsZWZ0JywgYWN0LmxlZnQgKVxuICAgICAgICAuc2V0KCAndG9wJywgYWN0LnRvcCApO1xuICAgICAgdGhpcy5zZXR0aW5ncyA9IHRoaXMuc2V0dGluZ3Muc2V0KCAndmlld3BvcnQnLCB2aWV3cG9ydCApO1xuICAgIH0gKTtcblxuICAgIGRpc3BhdGNoZXIucmVnaXN0ZXIoIE1pbmltYXBSZXNpemVkLCAoeyB3aWR0aCwgaGVpZ2h0IH0pID0+IHtcbiAgICAgIGNvbnN0IG1pbmltYXAgPSB0aGlzLnNldHRpbmdzLm1pbmltYXBcbiAgICAgICAgLnNldCggJ3dpZHRoJywgd2lkdGggKTtcbiAgICAgIHRoaXMuc2V0dGluZ3MgPSB0aGlzLnNldHRpbmdzLnNldCggJ21pbmltYXAnLCBtaW5pbWFwICk7XG4gICAgfSApO1xuXG4gICAgZGlzcGF0Y2hlci5yZWdpc3RlciggVmlld3BvcnRNZWFzdXJlZCwgKHsgd2lkdGgsIGhlaWdodCwgYnkgfSkgPT4ge1xuICAgICAgY29uc3Qgdmlld3BvcnQgPSB0aGlzLnNldHRpbmdzLnZpZXdwb3J0XG4gICAgICAgIC5zZXQoICd3aWR0aCcsIHdpZHRoIClcbiAgICAgICAgLnNldCggJ2hlaWdodCcsIGhlaWdodCApXG4gICAgICAgIC5zZXQoICdtb3ZlZEJ5JywgYnkgKTtcbiAgICAgIHRoaXMuc2V0dGluZ3MgPSB0aGlzLnNldHRpbmdzLnNldCggJ3ZpZXdwb3J0Jywgdmlld3BvcnQgKTtcbiAgICB9ICk7XG5cbiAgICBkaXNwYXRjaGVyLnJlZ2lzdGVyKCBDaGFuZ2VNb2RlLCBhY3QgPT4ge1xuICAgICAgdGhpcy5zZXR0aW5ncyA9IHRoaXMuc2V0dGluZ3Muc2V0KCAnbW9kZScsIGFjdC5tb2RlICk7XG4gICAgfSApO1xuXG4gICAgZGlzcGF0Y2hlci5yZWdpc3RlciggSGFuZGxlRm9jdXNSZWNlaXZlZCwgYWN0ID0+IHtcbiAgICAgIHRoaXMuc2V0dGluZ3MgPSB0aGlzLnNldHRpbmdzLnNldCggJ2hhc0ZvY3VzJywgdHJ1ZSApO1xuICAgIH0gKTtcblxuICAgIGRpc3BhdGNoZXIucmVnaXN0ZXIoIEhhbmRsZUZvY3VzTG9zdCwgYWN0ID0+IHtcbiAgICAgIHRoaXMuc2V0dGluZ3MgPSB0aGlzLnNldHRpbmdzLnNldCggJ2hhc0ZvY3VzJywgZmFsc2UgKTtcbiAgICB9ICk7XG5cbiAgfVxuXG59XG5cbmV4cG9ydCBkZWZhdWx0IFNldHRpbmdzU3RvcmU7XG4iXX0=